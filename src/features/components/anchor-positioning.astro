---
import FeatureLayout from "./../_layout.astro";
import Title from "../../components/feature.title.astro";
import Author from "../../components/author.astro";
import Video from "../../components/video.astro";
import CodePen from "../../components/codepen.astro";
import { Code } from "astro:components";
import { Icon } from "astro-icon/components";

import slugify from "./../../util/slugify";
export const title = "Anchor Positioning";
const slug = slugify(title);
---

<FeatureLayout slug={slug}>
  <Title slug={slug} title={title} />
  <div class="support">
    <baseline-status featureId="anchor-positioning"></baseline-status>
  </div>
  <p>
    Anchoring is a fresh and declarative way to position elements relative to
    each other. It's perfect for menus, tooltips, selects, labels, cards,
    settings dialogs, and many more. With anchor positioning built into the
    browser, you can build layered user interfaces without relying on
    third-party libraries.
  </p>
  <p>
    It takes two elements to create an anchor relationship: the <b>anchor</b> and
    <b>positioned element(s)</b>.
  </p>
  <p>
    The <b>anchor</b> is the element that the positioned elements orient to. Turn
    an element into an anchor with one line of CSS:
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`.anchor {
  anchor-name: --over-easy;
}`}
  />
  <p>
    The <b>positioned elements</b> are the elements that are positioned relative
    to the anchor. These point to the anchor they want to be positioned relative
    to with <code>position-anchor</code> and a second line of CSS to specify the
    side or area the positioned should be in.
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`.positioned-element {
  position: fixed;
  position-anchor: --over-easy;
  position-area: block-end;
}`}
  />

  <p>In the following demo, the cute egg is the anchor and the text "Over-Easy" is the positioned element.</p>

  <CodePen id="web-dot-dev/wBwKpmP" height={700} />

  <p>The <code>position-area</code> property offers all sorts of options! The demo uses the logical property value <code>block-end</code>, but there's <code>center</code >, <code>button</code>, and tons more. Una made a GUI to help you visualize the options:</p>

  <Video src="./video/anchoring.mp4" />

  <div class="resources">
    <p>
      <Icon name="book" title="Book Icon"aria-hidden="true" />
      Resources:
    </p>
    <ul>
      <li>
        <a href="http://anchor-tool.com/">anchor-tool.com</a> &mdash; Una's GUI
      </li>
      <li>
        <a href="https://www.youtube.com/watch?v=ASb9vO3ARHo"
          >Over-Easy Mini Web Machine</a
        > &mdash; CSS anchor + popover
      </li>
    </ul>
  </div>
  <Author name="adam" />
  <footer>
    <a href="https://codepen.io/collection/ExkRWw">Try demos</a>
    <div class="articles">
      <a href="https://developer.chrome.com/blog/anchor-positioning-api"
        >developer.chrome.com</a
      >
      <a href="https://developer.mozilla.org/docs/Web/CSS/anchor">MDN</a>
    </div>
  </footer>
</FeatureLayout>
