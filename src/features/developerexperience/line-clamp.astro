---
import FeatureLayout from "./../_layout.astro";
import Author from "../../components/author.astro";
import Video from "../../components/video.astro";
import CodePen from "../../components/codepen.astro";
import { Code } from "astro:components";
import { Icon } from "astro-icon/components";

import slugify from "./../../util/slugify";
export const title = "line-clamp";
const slug = slugify(title);
---

<FeatureLayout>
  <header>
    <h3 id={slug} set:html={title} />
    <Author name="adam" />
    <div class="support">
      <baseline-status featureId="line-clamp"></baseline-status>
    </div>
  </header>
  <p>
    A <code>-webkit-</code> prefixed version of line clamping has been available
    for a long time. It's always been a little rough around the edges though, in
    both the requirements to use it and its capabilities. This is what it looks like
    to use the <b>old prefixed version</b>:
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`.line-clamp {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}`}
  />
  <p>
    The <b>new unprefixed version</b> doesn't have any layout requirements, overflow
    requirements and has the added ability to clamp based on any length and not just
    a number of lines:
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`.line-clamp {
  line-clamp: 2;
}`}
  />
  <p><b>Much simpler API.</b></p>
  <p>
    In the follow video, a range input is hooked up to the <code
      >line-clamp</code
    > number. This shows the new flexibility, and is fun to adjust! <a
      href="https://codepen.io/web-dot-dev/pen/RwXdNVG">Try it here.</a
    >
  </p>
  <Video src="/video/line-clamp-number.mp4" />
  <p>
    In addition, the <code>line-clamp</code> property can be used to clamp based
    on a length, like a specific height or block-size.
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`.line-clamp {
  line-clamp: auto;
  max-block-size: 2lh;
}`}
  />
  <p>
    To do this, set the line-clamp value to <code>auto</code> and then set the <code
      >max-block-size</code
    > property to the desired length. <a
      href="https://codepen.io/web-dot-dev/pen/eYqXmEx">Try it here.</a
    >
  </p>
  <Video src="/video/line-clamp-auto.mp4" />
  <p>
    A "Read More" use case can use <code>line-clamp</code>
    combined with <a href="#animate-to-height-auto"
      ><code>interpolate-size</code></a
    >
    to show text ellipsis when the height is constrained, but animate to <code
      >height: auto</code
    > when "Show More" is clicked.
  </p>
  <Code
    lang="css"
    theme="css-variables"
    code={`p {
  line-clamp: auto;
  
  interpolate-size: allow-keywords;
  transition: block-size .3s ease;
  block-size: 2lh;
  overflow: clip;
  
  &.open {
    block-size: auto;
  }
}`}
  />
  <p>
    The result of that code is shown here in this video. <a
      href="https://codepen.io/web-dot-dev/pen/bGXZNoa">Try it here.</a
    >
  </p>
  <Video src="/video/line-clamp-transition.mp4" />
  <p>
    This standardization of <code>line-clamp</code> is a great step forward for users
    and developers as we can accomplish the task with less code and with finer detail.
  </p>
  <footer>
    <a href="https://codepen.io/collection/waLoYe">Try demo</a>
    <div class="articles">
      <a href="#">Article on web.dev</a>
      <a href="#">MDN</a>
    </div>
  </footer>
</FeatureLayout>
