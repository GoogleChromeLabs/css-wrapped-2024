---
import { Icon } from "astro-icon/components";
import NavBento from "./nav.bento.astro";
import Intro from "./intro.astro";
import Youtube from "./youtube.astro";

const { biomes } = Astro.props;
const totalFeatures = biomes.reduce((total, biome) => {
  return (total += biome.features.length);
}, 0);
---

<section>
  <div class="hero">
    <h1 class="retro-title">CSS Wrapped 2024</h1>
    <div class="grid-pile">
      <div class="particles" id="particles">
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="pixel"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
        <span class="plus"></span>
      </div>
      <div class="video">
        <Youtube id="bcpUS7qXuoA" />
      </div>
    </div>
    <div>
      <p class="sub-title">
        Chrome and <span class="callout"><Icon name="css" size="1ch" title="CSS" /> in 2024</span> journeyed<br>
        through the <b>forest</b>, over the <b>mountains</b>, and across the <b>seas</b>â€¦
      </p>
    </div>
    <div class="narrative">
      <div class="fullheight">
        <Intro />
      </div>
      
      <Icon name="dino" title="Stan the Offlineosaur on a skateboard" size="5rem" />

      <div class="fullheight">
        <p class="sub-title">Join the Chrome DevRel team and a skateboarding Chrome Dino on a journey through the latest CSS launched for Chrome and the web platform in 2024, highlighting <b>{totalFeatures} new features</b></p>
        <div class="bento-wrapper">
          <NavBento biomes={biomes} />
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const particles = document.getElementById("particles");
  const particlesArray = Array.from(particles.children);

  const random = (min, max) => Math.floor(Math.random() * (max - min) + min);
  const randomNeg = (value) => (Math.random() > 0.5 ? value : -value);

  particlesArray.forEach((particle: HTMLElement) => {
    const { matches: motionOK } = window.matchMedia(
      "(prefers-reduced-motion: no-preference)"
    );

    let randomX = randomNeg(random(70, 50));
    let randomY = randomNeg(random(85, 0));
    let randomDuration = random(1500, 6000);
    let randomRange = random(10, 200);

    particle.style.translate = `clamp(-45vi, ${randomX}cqi, 45vi) ${randomY}cqb`;
    particle.style.rotate = "1turn";
    particle.style.setProperty("--range", `${randomRange}vh`);

    if (motionOK) {
      particle.style.animationDuration = `auto, ${randomDuration}ms`;
      particle.style.animationTimingFunction =
        "var(--ease-3), var(--ease-spring-2)";
    }
  });
</script>

<style>
  @property --range {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
  }

  @keyframes particle-enter {
    from {
      translate: 0cqi 0cqi;
      rotate: 0turn;
    }
  }

  @keyframes particle-scroll {
    to {
      translate: 0cqi 0cqi;
      rotate: 0turn;
    }
  }

  @keyframes journeyed {
    from {
      transform: translateX(-10vw) scaleX(calc(var(--scroll-direction, 1)));
    }
    to {
      transform: translateX(100vw) scaleX(calc(var(--scroll-direction, 1)));
    }
  }

  @keyframes h1-leave {
    to {
      transform: translateY(200%) rotateZ(-0.15turn) scale(0);
    }
  }

  @keyframes narrative-enter {
    from {
      opacity: 0;
    }
  }

  @layer components.hero {
    section {
      max-inline-size: 100%;
      overflow-x: clip;
      position: relative;
      z-index: 0;
    }

    .hero {
      margin-block: var(--size-10) 10vh;
      max-inline-size: 90vw;
      margin-inline: auto;
      padding-inline: var(--size-3);
      display: grid;
      gap: var(--size-5);

      @media (width >= 720px) {
        max-inline-size: min(1024px, 75vw);
        margin-block: var(--size-4) 15vh;
        padding-inline: var(--size-5);
        gap: var(--size-8);
      }

      > h1 {
        font-size: clamp(5rem, 11vw, 14rem);
        text-align: center;
        max-inline-size: 100%;

        @supports (animation-timeline: view()) {
          @media (prefers-reduced-motion: no-preference) {
            animation: h1-leave linear both;
            animation-timeline: scroll();
            animation-range: 0vh 15vh;
          }
        }
      }

      p {
        text-align: center;
        max-inline-size: max-content;
        margin-inline: auto;
      }

      .hero-title {
        font-size: 15cqi;
        margin-block: var(--size-8);
      }

      .sub-title {
        font-size: var(--font-size-4);
        font-weight: 200;

        text-align: center;
        text-wrap: balance;
        inline-size: 70vi;
        max-inline-size: 50ch;

        @media (width >= 720px) {
          line-height: 1.85;
        }

        > .callout {
          display: inline-flex;
          gap: var(--size-2);
          place-items: baseline;
          font-weight: bold;
          line-height: 1cap;

          border: 2px solid var(--surface-4);
          border-radius: var(--radius-2);
          padding-block: var(--size-2);
          padding-inline: var(--size-2);
          margin-inline: var(--size-1);
        }
      }

      .narrative {
        display: grid;
        container: narrative / inline-size;

        > p {
          @supports (animation-timeline: view()) {
            @media (prefers-reduced-motion: no-preference) {
              animation: narrative-enter linear both;
              animation-timeline: view();
              animation-range: 10% 20%;
            }
          }
        }

        > svg {
          @media (prefers-reduced-motion: no-preference) {
            @supports (animation-timeline: view()) {
              animation: journeyed linear both;
              animation-timeline: view(y);
              animation-range: 25% 75%;
            }
          }
        }
      }
    }

    .video {
      z-index: 1;
      width: 90%;
      margin: 0 auto;
      aspect-ratio: 16/9;
      background: var(--surface-3);
      border-radius: var(--radius-3);
      overflow: clip;
      will-change: transform;

      lite-youtube {
        max-width: none !important;
      }

      @media (prefers-reduced-motion: no-preference) {
        animation: scale-down 3s var(--ease-2) reverse;
      }

      > svg {
        block-size: 5rem;
        inline-size: 5rem;
      }
    }

    .particles {
      position: relative;
      display: grid;
      place-items: center;
      container-type: size;

      > span {
        position: absolute;
        transform-origin: center;

        @media (prefers-reduced-motion: no-preference) {
          animation:
            particle-scroll linear both,
            particle-enter 1s ease;
          animation-timeline: scroll(y root), auto;
          animation-range: 0vh var(--range);
        }

        &.pixel {
          width: 1rem;
          height: 1rem;
          background: var(--blue-5);

          &:nth-of-type(2n) {
            background: var(--blue-2);
          }
        }

        &.plus {
          --_color: var(--blue-5);

          width: 3rem;
          height: 3rem;
          background: linear-gradient(
              to right,
              #0000 0 1rem,
              var(--_color) 1rem 2rem,
              #0000 2rem 3rem
            ),
            linear-gradient(
              to bottom,
              #0000 0 1rem,
              var(--_color) 1rem 2rem,
              #0000 2rem 3rem
            );

          &:nth-of-type(2n) {
            --_color: var(--blue-3);
          }
        }
      }
    }

    .bento-wrapper {
      padding-block: var(--size-5);

      @media (width >= 720px) {
        padding-block: var(--size-8);
      }
    }
  }
</style>
