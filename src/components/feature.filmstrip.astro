---
import slugify from "./../util/slugify";
import shuffle from "./../util/shuffle";

const { biomes } = Astro.props;

// Flatten all Biome features to one flat array
const features = biomes.reduce(
  (features, biome) => [...features, ...biome.features],
  []
).map((feature) => feature.title);
---

<div class="feature-grid">
  <div class="row">
    {
      shuffle(features).map((feature) => (
        <a class="card" href={`#${slugify(feature)}`} set:html={feature} />
      ))
    }
  </div>
  <div class="row">
    {
      shuffle(features).map((feature) => (
        <a class="card" href={`#${slugify(feature)}`} set:html={feature} />
      ))
    }
  </div>
</div>

<style>
  @keyframes pan-x {
    from {
      transform: translateX(-15vw);
    }
    to {
      transform: translateX(5vw);
    }
  }

  .feature-grid {
    display: grid;
    place-content: center;
    gap: var(--size-3);
    padding-block: var(--size-10) var(--size-13);
    max-inline-size: 100vw;
    overflow: clip;

    > .row {
      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: max(10vw, 15ch);
      gap: var(--size-3);

      @media (prefers-reduced-motion: no-preference) {
        @supports (animation-timeline: view()) {
          animation: pan-x linear both;
          animation-timeline: view(block);
        }
      }

      &:first-of-type {
        animation-direction: reverse;
      }

      > .card {
        aspect-ratio: 3/4;
        padding: var(--size-3);
        background: var(--surface-3);
        border-radius: var(--radius-3);
        box-shadow: var(--shadow-1);

        display: grid;
        place-content: center;
        place-items: center;
        text-align: center;
        overflow: clip;

        font-size: var(--font-size-4);
        font-weight: 100;
      }
    }
  }
</style>
